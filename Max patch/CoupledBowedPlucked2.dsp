declare filename "CoupledBowedPlucked2.dsp"; declare name "CoupledBowedPlucked2"; declare compilation_options    "-single -scal -I libraries/ -I project/ -lang wasm";
declare library_path0 "/libraries/stdfaust.lib";
declare library_path1 "/libraries/fds.lib";
declare library_path2 "/libraries/maths.lib";
declare library_path3 "/libraries/platform.lib";
declare library_path4 "/libraries/basics.lib";
declare library_path5 "/libraries/signals.lib";
declare library_path6 "/libraries/routes.lib";
declare author "David Suedholt";
declare contributor "Marco Fiorini";
declare basics_lib_name "Faust Basic Element Library";
declare basics_lib_version "0.6";
declare fds_lib_author "Riccardo Russo";
declare fds_lib_name "Faust Finite Difference Schemes Library";
declare fds_lib_version "0.0";
declare filename "FaustDSP";
declare maths_lib_author "GRAME";
declare maths_lib_copyright "GRAME";
declare maths_lib_license "LGPL with exception";
declare maths_lib_name "Faust Math Library";
declare maths_lib_version "2.5";
declare name "Coupled Finite Difference Schemes in Faust with Bowing and Pluckin";
declare platform_lib_name "Generic Platform Library";
declare platform_lib_version "0.2";
declare routes_lib_name "Faust Signal Routing Library";
declare routes_lib_version "0.2";
declare signals_lib_name "Faust Signal Routing Library";
declare signals_lib_version "0.1";
declare version "0.2";
ID_731 = 0, 0;
ID_611 = hslider("Radius 0", 0.00046000000000000001f, 4.6e-05f, 0.045999999999999999f, 9.9999999999999995e-07f);
ID_986 = hslider("Radius 1", 0.00046000000000000001f, 4.6e-05f, 0.045999999999999999f, 9.9999999999999995e-07f);
ID_1117 = hslider("Radius 2", 0.00046000000000000001f, 4.6e-05f, 0.045999999999999999f, 9.9999999999999995e-07f);
ID_144 = 20, 4;
ID_197 = _, _;
ID_2070 = _ <: ID_197;
ID_106 = hslider("Input Point3", 2.0f, 0.0f, 4.0f, 1.0f);
ID_131 = 4, ID_106;
ID_132 = (ID_131 : ==);
ID_3 = 0, 1;
ID_133 = ID_132, ID_3;
ID_134 = (ID_133 : select2);
ID_135 = _, ID_134;
ID_136 = (ID_135 : *);
ID_125 = 3, ID_106;
ID_126 = (ID_125 : ==);
ID_127 = ID_126, ID_3;
ID_128 = (ID_127 : select2);
ID_129 = _, ID_128;
ID_130 = (ID_129 : *);
ID_137 = ID_130, ID_136;
ID_119 = 2, ID_106;
ID_120 = (ID_119 : ==);
ID_121 = ID_120, ID_3;
ID_122 = (ID_121 : select2);
ID_123 = _, ID_122;
ID_124 = (ID_123 : *);
ID_138 = ID_124, ID_137;
ID_113 = 1, ID_106;
ID_114 = (ID_113 : ==);
ID_115 = ID_114, ID_3;
ID_116 = (ID_115 : select2);
ID_117 = _, ID_116;
ID_118 = (ID_117 : *);
ID_139 = ID_118, ID_138;
ID_107 = 0, ID_106;
ID_108 = (ID_107 : ==);
ID_109 = ID_108, ID_3;
ID_110 = (ID_109 : select2);
ID_111 = _, ID_110;
ID_112 = (ID_111 : *);
ID_140 = ID_112, ID_139;
ID_71 = hslider("Input Point2", 2.0f, 0.0f, 4.0f, 1.0f);
ID_96 = 4, ID_71;
ID_97 = (ID_96 : ==);
ID_98 = ID_97, ID_3;
ID_99 = (ID_98 : select2);
ID_100 = _, ID_99;
ID_101 = (ID_100 : *);
ID_90 = 3, ID_71;
ID_91 = (ID_90 : ==);
ID_92 = ID_91, ID_3;
ID_93 = (ID_92 : select2);
ID_94 = _, ID_93;
ID_95 = (ID_94 : *);
ID_102 = ID_95, ID_101;
ID_84 = 2, ID_71;
ID_85 = (ID_84 : ==);
ID_86 = ID_85, ID_3;
ID_87 = (ID_86 : select2);
ID_88 = _, ID_87;
ID_89 = (ID_88 : *);
ID_103 = ID_89, ID_102;
ID_78 = 1, ID_71;
ID_79 = (ID_78 : ==);
ID_80 = ID_79, ID_3;
ID_81 = (ID_80 : select2);
ID_82 = _, ID_81;
ID_83 = (ID_82 : *);
ID_104 = ID_83, ID_103;
ID_72 = 0, ID_71;
ID_73 = (ID_72 : ==);
ID_74 = ID_73, ID_3;
ID_75 = (ID_74 : select2);
ID_76 = _, ID_75;
ID_77 = (ID_76 : *);
ID_105 = ID_77, ID_104;
ID_141 = ID_105, ID_140;
ID_36 = hslider("Input Point1", 2.0f, 0.0f, 4.0f, 1.0f);
ID_61 = 4, ID_36;
ID_62 = (ID_61 : ==);
ID_63 = ID_62, ID_3;
ID_64 = (ID_63 : select2);
ID_65 = _, ID_64;
ID_66 = (ID_65 : *);
ID_55 = 3, ID_36;
ID_56 = (ID_55 : ==);
ID_57 = ID_56, ID_3;
ID_58 = (ID_57 : select2);
ID_59 = _, ID_58;
ID_60 = (ID_59 : *);
ID_67 = ID_60, ID_66;
ID_49 = 2, ID_36;
ID_50 = (ID_49 : ==);
ID_51 = ID_50, ID_3;
ID_52 = (ID_51 : select2);
ID_53 = _, ID_52;
ID_54 = (ID_53 : *);
ID_68 = ID_54, ID_67;
ID_43 = 1, ID_36;
ID_44 = (ID_43 : ==);
ID_45 = ID_44, ID_3;
ID_46 = (ID_45 : select2);
ID_47 = _, ID_46;
ID_48 = (ID_47 : *);
ID_69 = ID_48, ID_68;
ID_37 = 0, ID_36;
ID_38 = (ID_37 : ==);
ID_39 = ID_38, ID_3;
ID_40 = (ID_39 : select2);
ID_41 = _, ID_40;
ID_42 = (ID_41 : *);
ID_70 = ID_42, ID_69;
ID_142 = ID_70, ID_141;
ID_0 = hslider("Input Point0", 2.0f, 0.0f, 4.0f, 1.0f);
ID_26 = 4, ID_0;
ID_27 = (ID_26 : ==);
ID_28 = ID_27, ID_3;
ID_29 = (ID_28 : select2);
ID_30 = _, ID_29;
ID_31 = (ID_30 : *);
ID_20 = 3, ID_0;
ID_21 = (ID_20 : ==);
ID_22 = ID_21, ID_3;
ID_23 = (ID_22 : select2);
ID_24 = _, ID_23;
ID_25 = (ID_24 : *);
ID_32 = ID_25, ID_31;
ID_14 = 2, ID_0;
ID_15 = (ID_14 : ==);
ID_16 = ID_15, ID_3;
ID_17 = (ID_16 : select2);
ID_18 = _, ID_17;
ID_19 = (ID_18 : *);
ID_33 = ID_19, ID_32;
ID_8 = 1, ID_0;
ID_9 = (ID_8 : ==);
ID_10 = ID_9, ID_3;
ID_11 = (ID_10 : select2);
ID_12 = _, ID_11;
ID_13 = (ID_12 : *);
ID_34 = ID_13, ID_33;
ID_1 = 0, ID_0;
ID_2 = (ID_1 : ==);
ID_4 = ID_2, ID_3;
ID_5 = (ID_4 : select2);
ID_6 = _, ID_5;
ID_7 = (ID_6 : *);
ID_35 = ID_7, ID_34;
ID_143 = ID_35, ID_142;
ID_145 = 4, ID_144;
ID_146 = 19, ID_145;
ID_147 = 4, ID_146;
ID_148 = 18, ID_147;
ID_149 = 4, ID_148;
ID_150 = 17, ID_149;
ID_151 = 4, ID_150;
ID_152 = 16, ID_151;
ID_153 = 3, ID_152;
ID_154 = 15, ID_153;
ID_155 = 3, ID_154;
ID_156 = 14, ID_155;
ID_157 = 3, ID_156;
ID_158 = 13, ID_157;
ID_159 = 3, ID_158;
ID_160 = 12, ID_159;
ID_161 = 3, ID_160;
ID_162 = 11, ID_161;
ID_163 = 2, ID_162;
ID_164 = 10, ID_163;
ID_165 = 2, ID_164;
ID_166 = 9, ID_165;
ID_167 = 2, ID_166;
ID_168 = 8, ID_167;
ID_169 = 2, ID_168;
ID_170 = 7, ID_169;
ID_171 = 2, ID_170;
ID_172 = 6, ID_171;
ID_173 = 1, ID_172;
ID_174 = 5, ID_173;
ID_175 = 1, ID_174;
ID_176 = 4, ID_175;
ID_177 = 1, ID_176;
ID_178 = 3, ID_177;
ID_179 = 1, ID_178;
ID_180 = 2, ID_179;
ID_181 = 1, ID_180;
ID_182 = 1, ID_181;
ID_183 = route(20,4,ID_182);
ID_643 = fconstant(int fSamplingFreq, <math.h>);
ID_644 = 1.0f, ID_643;
ID_645 = (ID_644 : max);
ID_646 = 192000.0f, ID_645;
ID_647 = (ID_646 : min);
ID_648 = 1.0f, ID_647;
ID_649 = (ID_648 : /);
ID_436 = hslider("Bowing Force3", 3000.0f, 0.10000000000000001f, 10000.0f, 0.10000000000000001f);
ID_437 = 0, ID_436;
ID_438 = (ID_437 : -);
ID_959 = _, 1;
ID_195 = nentry("Exciter Mode", 0.0f, 0.0f, 1.0f, 1.0f);
ID_196 = (ID_195 : int);
ID_198 = ID_196, ID_197;
ID_199 = ID_198 : select2;
ID_200 = ID_199 <: _;
ID_456 = (ID_106 : floor);
ID_457 = ID_106, ID_456;
ID_458 = (ID_457 : -);
ID_462 = 1, ID_458;
ID_463 = (ID_462 : -);
ID_451 = ID_106, 1;
ID_452 = ID_451 : +;
ID_453 = (ID_452 : int);
ID_504 = 4, ID_453;
ID_505 = (ID_504 : ==);
ID_459 = 0, ID_458;
ID_506 = ID_505, ID_459;
ID_507 = (ID_506 : select2);
ID_448 = (ID_106 : int);
ID_502 = 4, ID_448;
ID_503 = (ID_502 : ==);
ID_508 = ID_507, ID_463;
ID_509 = ID_503, ID_508;
ID_510 = (ID_509 : select2);
ID_511 = _, ID_510;
ID_512 = (ID_511 : *);
ID_493 = 3, ID_453;
ID_494 = (ID_493 : ==);
ID_495 = ID_494, ID_459;
ID_496 = (ID_495 : select2);
ID_491 = 3, ID_448;
ID_492 = (ID_491 : ==);
ID_497 = ID_496, ID_463;
ID_498 = ID_492, ID_497;
ID_499 = (ID_498 : select2);
ID_500 = _, ID_499;
ID_501 = (ID_500 : *);
ID_513 = ID_501, ID_512;
ID_482 = 2, ID_453;
ID_483 = (ID_482 : ==);
ID_484 = ID_483, ID_459;
ID_485 = (ID_484 : select2);
ID_480 = 2, ID_448;
ID_481 = (ID_480 : ==);
ID_486 = ID_485, ID_463;
ID_487 = ID_481, ID_486;
ID_488 = (ID_487 : select2);
ID_489 = _, ID_488;
ID_490 = (ID_489 : *);
ID_514 = ID_490, ID_513;
ID_471 = 1, ID_453;
ID_472 = (ID_471 : ==);
ID_473 = ID_472, ID_459;
ID_474 = (ID_473 : select2);
ID_469 = 1, ID_448;
ID_470 = (ID_469 : ==);
ID_475 = ID_474, ID_463;
ID_476 = ID_470, ID_475;
ID_477 = (ID_476 : select2);
ID_478 = _, ID_477;
ID_479 = (ID_478 : *);
ID_515 = ID_479, ID_514;
ID_454 = 0, ID_453;
ID_455 = (ID_454 : ==);
ID_460 = ID_455, ID_459;
ID_461 = (ID_460 : select2);
ID_449 = 0, ID_448;
ID_450 = (ID_449 : ==);
ID_464 = ID_461, ID_463;
ID_465 = ID_450, ID_464;
ID_466 = (ID_465 : select2);
ID_467 = _, ID_466;
ID_468 = (ID_467 : *);
ID_516 = ID_468, ID_515;
ID_354 = hslider("Bowing Force2", 3000.0f, 0.10000000000000001f, 10000.0f, 0.10000000000000001f);
ID_355 = 0, ID_354;
ID_356 = (ID_355 : -);
ID_374 = (ID_71 : floor);
ID_375 = ID_71, ID_374;
ID_376 = (ID_375 : -);
ID_380 = 1, ID_376;
ID_381 = (ID_380 : -);
ID_369 = ID_71, 1;
ID_370 = ID_369 : +;
ID_371 = (ID_370 : int);
ID_422 = 4, ID_371;
ID_423 = (ID_422 : ==);
ID_377 = 0, ID_376;
ID_424 = ID_423, ID_377;
ID_425 = (ID_424 : select2);
ID_366 = (ID_71 : int);
ID_420 = 4, ID_366;
ID_421 = (ID_420 : ==);
ID_426 = ID_425, ID_381;
ID_427 = ID_421, ID_426;
ID_428 = (ID_427 : select2);
ID_429 = _, ID_428;
ID_430 = (ID_429 : *);
ID_411 = 3, ID_371;
ID_412 = (ID_411 : ==);
ID_413 = ID_412, ID_377;
ID_414 = (ID_413 : select2);
ID_409 = 3, ID_366;
ID_410 = (ID_409 : ==);
ID_415 = ID_414, ID_381;
ID_416 = ID_410, ID_415;
ID_417 = (ID_416 : select2);
ID_418 = _, ID_417;
ID_419 = (ID_418 : *);
ID_431 = ID_419, ID_430;
ID_400 = 2, ID_371;
ID_401 = (ID_400 : ==);
ID_402 = ID_401, ID_377;
ID_403 = (ID_402 : select2);
ID_398 = 2, ID_366;
ID_399 = (ID_398 : ==);
ID_404 = ID_403, ID_381;
ID_405 = ID_399, ID_404;
ID_406 = (ID_405 : select2);
ID_407 = _, ID_406;
ID_408 = (ID_407 : *);
ID_432 = ID_408, ID_431;
ID_389 = 1, ID_371;
ID_390 = (ID_389 : ==);
ID_391 = ID_390, ID_377;
ID_392 = (ID_391 : select2);
ID_387 = 1, ID_366;
ID_388 = (ID_387 : ==);
ID_393 = ID_392, ID_381;
ID_394 = ID_388, ID_393;
ID_395 = (ID_394 : select2);
ID_396 = _, ID_395;
ID_397 = (ID_396 : *);
ID_433 = ID_397, ID_432;
ID_372 = 0, ID_371;
ID_373 = (ID_372 : ==);
ID_378 = ID_373, ID_377;
ID_379 = (ID_378 : select2);
ID_367 = 0, ID_366;
ID_368 = (ID_367 : ==);
ID_382 = ID_379, ID_381;
ID_383 = ID_368, ID_382;
ID_384 = (ID_383 : select2);
ID_385 = _, ID_384;
ID_386 = (ID_385 : *);
ID_434 = ID_386, ID_433;
ID_272 = hslider("Bowing Force1", 3000.0f, 0.10000000000000001f, 10000.0f, 0.10000000000000001f);
ID_273 = 0, ID_272;
ID_274 = (ID_273 : -);
ID_292 = (ID_36 : floor);
ID_293 = ID_36, ID_292;
ID_294 = (ID_293 : -);
ID_298 = 1, ID_294;
ID_299 = (ID_298 : -);
ID_287 = ID_36, 1;
ID_288 = ID_287 : +;
ID_289 = (ID_288 : int);
ID_340 = 4, ID_289;
ID_341 = (ID_340 : ==);
ID_295 = 0, ID_294;
ID_342 = ID_341, ID_295;
ID_343 = (ID_342 : select2);
ID_284 = (ID_36 : int);
ID_338 = 4, ID_284;
ID_339 = (ID_338 : ==);
ID_344 = ID_343, ID_299;
ID_345 = ID_339, ID_344;
ID_346 = (ID_345 : select2);
ID_347 = _, ID_346;
ID_348 = (ID_347 : *);
ID_329 = 3, ID_289;
ID_330 = (ID_329 : ==);
ID_331 = ID_330, ID_295;
ID_332 = (ID_331 : select2);
ID_327 = 3, ID_284;
ID_328 = (ID_327 : ==);
ID_333 = ID_332, ID_299;
ID_334 = ID_328, ID_333;
ID_335 = (ID_334 : select2);
ID_336 = _, ID_335;
ID_337 = (ID_336 : *);
ID_349 = ID_337, ID_348;
ID_318 = 2, ID_289;
ID_319 = (ID_318 : ==);
ID_320 = ID_319, ID_295;
ID_321 = (ID_320 : select2);
ID_316 = 2, ID_284;
ID_317 = (ID_316 : ==);
ID_322 = ID_321, ID_299;
ID_323 = ID_317, ID_322;
ID_324 = (ID_323 : select2);
ID_325 = _, ID_324;
ID_326 = (ID_325 : *);
ID_350 = ID_326, ID_349;
ID_307 = 1, ID_289;
ID_308 = (ID_307 : ==);
ID_309 = ID_308, ID_295;
ID_310 = (ID_309 : select2);
ID_305 = 1, ID_284;
ID_306 = (ID_305 : ==);
ID_311 = ID_310, ID_299;
ID_312 = ID_306, ID_311;
ID_313 = (ID_312 : select2);
ID_314 = _, ID_313;
ID_315 = (ID_314 : *);
ID_351 = ID_315, ID_350;
ID_290 = 0, ID_289;
ID_291 = (ID_290 : ==);
ID_296 = ID_291, ID_295;
ID_297 = (ID_296 : select2);
ID_285 = 0, ID_284;
ID_286 = (ID_285 : ==);
ID_300 = ID_297, ID_299;
ID_301 = ID_286, ID_300;
ID_302 = (ID_301 : select2);
ID_303 = _, ID_302;
ID_304 = (ID_303 : *);
ID_352 = ID_304, ID_351;
ID_184 = hslider("Bowing Force0", 3000.0f, 0.10000000000000001f, 10000.0f, 0.10000000000000001f);
ID_185 = 0, ID_184;
ID_186 = (ID_185 : -);
ID_210 = (ID_0 : floor);
ID_211 = ID_0, ID_210;
ID_212 = (ID_211 : -);
ID_216 = 1, ID_212;
ID_217 = (ID_216 : -);
ID_205 = ID_0, 1;
ID_206 = ID_205 : +;
ID_207 = (ID_206 : int);
ID_258 = 4, ID_207;
ID_259 = (ID_258 : ==);
ID_213 = 0, ID_212;
ID_260 = ID_259, ID_213;
ID_261 = (ID_260 : select2);
ID_202 = (ID_0 : int);
ID_256 = 4, ID_202;
ID_257 = (ID_256 : ==);
ID_262 = ID_261, ID_217;
ID_263 = ID_257, ID_262;
ID_264 = (ID_263 : select2);
ID_265 = _, ID_264;
ID_266 = (ID_265 : *);
ID_247 = 3, ID_207;
ID_248 = (ID_247 : ==);
ID_249 = ID_248, ID_213;
ID_250 = (ID_249 : select2);
ID_245 = 3, ID_202;
ID_246 = (ID_245 : ==);
ID_251 = ID_250, ID_217;
ID_252 = ID_246, ID_251;
ID_253 = (ID_252 : select2);
ID_254 = _, ID_253;
ID_255 = (ID_254 : *);
ID_267 = ID_255, ID_266;
ID_236 = 2, ID_207;
ID_237 = (ID_236 : ==);
ID_238 = ID_237, ID_213;
ID_239 = (ID_238 : select2);
ID_234 = 2, ID_202;
ID_235 = (ID_234 : ==);
ID_240 = ID_239, ID_217;
ID_241 = ID_235, ID_240;
ID_242 = (ID_241 : select2);
ID_243 = _, ID_242;
ID_244 = (ID_243 : *);
ID_268 = ID_244, ID_267;
ID_225 = 1, ID_207;
ID_226 = (ID_225 : ==);
ID_227 = ID_226, ID_213;
ID_228 = (ID_227 : select2);
ID_223 = 1, ID_202;
ID_224 = (ID_223 : ==);
ID_229 = ID_228, ID_217;
ID_230 = ID_224, ID_229;
ID_231 = (ID_230 : select2);
ID_232 = _, ID_231;
ID_233 = (ID_232 : *);
ID_269 = ID_233, ID_268;
ID_208 = 0, ID_207;
ID_209 = (ID_208 : ==);
ID_214 = ID_209, ID_213;
ID_215 = (ID_214 : select2);
ID_203 = 0, ID_202;
ID_204 = (ID_203 : ==);
ID_218 = ID_215, ID_217;
ID_219 = ID_204, ID_218;
ID_220 = (ID_219 : select2);
ID_221 = _, ID_220;
ID_222 = (ID_221 : *);
ID_270 = ID_222, ID_269;
ID_521 = 40, 40;
ID_522 = 39, ID_521;
ID_523 = 39, ID_522;
ID_524 = 38, ID_523;
ID_525 = 38, ID_524;
ID_526 = 37, ID_525;
ID_527 = 37, ID_526;
ID_528 = 36, ID_527;
ID_529 = 36, ID_528;
ID_530 = 30, ID_529;
ID_531 = 35, ID_530;
ID_532 = 29, ID_531;
ID_533 = 34, ID_532;
ID_534 = 28, ID_533;
ID_535 = 33, ID_534;
ID_536 = 27, ID_535;
ID_537 = 32, ID_536;
ID_538 = 26, ID_537;
ID_539 = 31, ID_538;
ID_540 = 20, ID_539;
ID_541 = 30, ID_540;
ID_542 = 19, ID_541;
ID_543 = 29, ID_542;
ID_544 = 18, ID_543;
ID_545 = 28, ID_544;
ID_546 = 17, ID_545;
ID_547 = 27, ID_546;
ID_548 = 16, ID_547;
ID_549 = 26, ID_548;
ID_550 = 10, ID_549;
ID_551 = 25, ID_550;
ID_552 = 9, ID_551;
ID_553 = 24, ID_552;
ID_554 = 8, ID_553;
ID_555 = 23, ID_554;
ID_556 = 7, ID_555;
ID_557 = 22, ID_556;
ID_558 = 6, ID_557;
ID_559 = 21, ID_558;
ID_560 = 35, ID_559;
ID_561 = 20, ID_560;
ID_562 = 34, ID_561;
ID_563 = 19, ID_562;
ID_564 = 33, ID_563;
ID_565 = 18, ID_564;
ID_566 = 32, ID_565;
ID_567 = 17, ID_566;
ID_568 = 31, ID_567;
ID_569 = 16, ID_568;
ID_570 = 25, ID_569;
ID_571 = 15, ID_570;
ID_572 = 24, ID_571;
ID_573 = 14, ID_572;
ID_574 = 23, ID_573;
ID_575 = 13, ID_574;
ID_576 = 22, ID_575;
ID_577 = 12, ID_576;
ID_578 = 21, ID_577;
ID_579 = 11, ID_578;
ID_580 = 15, ID_579;
ID_581 = 10, ID_580;
ID_582 = 14, ID_581;
ID_583 = 9, ID_582;
ID_584 = 13, ID_583;
ID_585 = 8, ID_584;
ID_586 = 12, ID_585;
ID_587 = 7, ID_586;
ID_588 = 11, ID_587;
ID_589 = 6, ID_588;
ID_590 = 5, ID_589;
ID_591 = 5, ID_590;
ID_592 = 4, ID_591;
ID_593 = 4, ID_592;
ID_594 = 3, ID_593;
ID_595 = 3, ID_594;
ID_596 = 2, ID_595;
ID_597 = 2, ID_596;
ID_598 = 1, ID_597;
ID_599 = 1, ID_598;
ID_600 = route(40,40,ID_599);
ID_1107 = hslider("Tuning 2", 247.0f, 80.0f, 1000.0f, 0.10000000000000001f);
ID_1108 = 2, ID_1107;
ID_1109 = (ID_1108 : *);
ID_1110 = ID_1109, 0.65000000000000002f;
ID_1111 = (ID_1110 : *);
ID_1112 = ID_1111, 2;
ID_1113 = (ID_1112 : pow);
ID_1114 = hslider("Density 2", 1200.0f, 80.0f, 5000.0f, 0.10000000000000001f);
ID_1115 = ID_1113, ID_1114;
ID_1116 = (ID_1115 : *);
ID_1118 = ID_1117, 2;
ID_1119 = (ID_1118 : pow);
ID_1120 = 3.1415926535897931f, ID_1119;
ID_1121 = (ID_1120 : *);
ID_1122 = ID_1116, ID_1121;
ID_1123 = (ID_1122 : *);
ID_1124 = -2, ID_1123;
ID_1125 = (ID_1124 : *);
ID_1126 = ID_1125, 0.011736111111111112f;
ID_1127 = (ID_1126 : *);
ID_1128 = ID_1117, 4;
ID_1129 = (ID_1128 : pow);
ID_1130 = 3.1415926535897931f, ID_1129;
ID_1131 = (ID_1130 : *);
ID_1132 = ID_1131, 4;
ID_1133 = (ID_1132 : /);
ID_1134 = 2000000000.0f, ID_1133;
ID_1135 = (ID_1134 : *);
ID_1136 = 6, ID_1135;
ID_1137 = (ID_1136 : *);
ID_1138 = ID_1127, ID_1137;
ID_1139 = (ID_1138 : -);
ID_1140 = ID_1114, ID_1121;
ID_1141 = (ID_1140 : *);
ID_1142 = 2, ID_1141;
ID_1143 = (ID_1142 : *);
ID_1144 = hslider("Damping 2", 1.3799999999999999f, 9.9999999999999995e-07f, 100.0f, 0.0001f);
ID_1145 = ID_1143, ID_1144;
ID_1146 = (ID_1145 : *);
ID_1147 = ID_1146, 0.00013773630401234569f;
ID_1148 = (ID_1147 : *);
ID_1149 = ID_1148, ID_649;
ID_1150 = (ID_1149 : /);
ID_1151 = ID_1139, ID_1150;
ID_1152 = (ID_1151 : -);
ID_1153 = 4, ID_1141;
ID_1154 = (ID_1153 : *);
ID_1155 = ID_1154, 0.00012999999999999999f;
ID_1156 = (ID_1155 : *);
ID_1157 = ID_1156, 0.011736111111111112f;
ID_1158 = (ID_1157 : *);
ID_1159 = ID_1158, ID_649;
ID_1160 = (ID_1159 : /);
ID_1161 = ID_1152, ID_1160;
ID_1162 = (ID_1161 : -);
ID_1163 = ID_1143, 0.00013773630401234569f;
ID_1164 = (ID_1163 : *);
ID_666 = ID_649, 2;
ID_667 = (ID_666 : pow);
ID_1165 = ID_1164, ID_667;
ID_1166 = (ID_1165 : /);
ID_1167 = ID_1162, ID_1166;
ID_1168 = (ID_1167 : +);
ID_1169 = ID_1168, ID_1135;
ID_1170 = (ID_1169 : +);
ID_1171 = ID_1170, 0.00013773630401234569f;
ID_1172 = (ID_1171 : /);
ID_1173 = ID_1123, 0.011736111111111112f;
ID_1174 = (ID_1173 : *);
ID_1175 = 4, ID_1135;
ID_1176 = (ID_1175 : *);
ID_1177 = ID_1174, ID_1176;
ID_1178 = (ID_1177 : +);
ID_1179 = ID_1143, 0.00012999999999999999f;
ID_1180 = (ID_1179 : *);
ID_1181 = ID_1180, 0.011736111111111112f;
ID_1182 = (ID_1181 : *);
ID_1183 = ID_1182, ID_649;
ID_1184 = (ID_1183 : /);
ID_1185 = ID_1178, ID_1184;
ID_1186 = (ID_1185 : +);
ID_1187 = ID_1186, 0.00013773630401234569f;
ID_1188 = (ID_1187 : /);
ID_1189 = 0, ID_1135;
ID_1190 = (ID_1189 : -);
ID_1191 = ID_1190, 0.00013773630401234569f;
ID_1192 = (ID_1191 : /);
ID_1193 = ID_1188, ID_1192;
ID_1194 = ID_1172, ID_1193;
ID_1195 = 0, ID_1194;
ID_1196 = 0, ID_1195;
ID_1197 = -2, ID_1141;
ID_1198 = (ID_1197 : *);
ID_1199 = ID_1198, 0.00012999999999999999f;
ID_1200 = (ID_1199 : *);
ID_1201 = ID_1200, 0.011736111111111112f;
ID_1202 = (ID_1201 : /);
ID_1203 = ID_1202, ID_649;
ID_1204 = (ID_1203 : /);
ID_1205 = ID_1146, ID_649;
ID_1206 = (ID_1205 : /);
ID_1207 = (ID_1157 : /);
ID_1208 = ID_1207, ID_649;
ID_1209 = (ID_1208 : /);
ID_1210 = ID_1206, ID_1209;
ID_1211 = (ID_1210 : +);
ID_1212 = ID_1141, ID_667;
ID_1213 = (ID_1212 : /);
ID_1214 = ID_1211, ID_1213;
ID_1215 = (ID_1214 : -);
ID_1216 = ID_1204, 0;
ID_1217 = ID_1215, ID_1216;
ID_1218 = ID_1204, ID_1217;
ID_1219 = 0, ID_1218;
ID_1220 = ID_1168, 0.00013773630401234569f;
ID_1221 = (ID_1220 : /);
ID_1222 = ID_1221, ID_1193;
ID_1223 = ID_1188, ID_1222;
ID_1224 = ID_1192, ID_1223;
ID_1225 = ID_1224, ID_1219;
ID_1226 = ID_1225, ID_1225;
ID_1227 = ID_1225, ID_1226;
ID_1228 = ID_1172, ID_731;
ID_1229 = ID_1188, ID_1228;
ID_1230 = ID_1192, ID_1229;
ID_1231 = ID_1230, ID_1219;
ID_1232 = ID_1227, ID_1231;
ID_1233 = ID_1219, ID_1232;
ID_1234 = ID_1196, ID_1233;
ID_748 = 55, 0;
ID_749 = 0, ID_748;
ID_750 = 55, ID_749;
ID_751 = 78, ID_750;
ID_752 = 55, ID_751;
ID_753 = 63, ID_752;
ID_754 = 55, ID_753;
ID_755 = 48, ID_754;
ID_756 = 55, ID_755;
ID_757 = 65, ID_756;
ID_758 = 60, ID_757;
ID_759 = 75, ID_758;
ID_760 = 50, ID_759;
ID_761 = 74, ID_760;
ID_762 = 49, ID_761;
ID_763 = 73, ID_762;
ID_764 = 48, ID_763;
ID_765 = 72, ID_764;
ID_766 = 47, ID_765;
ID_767 = 71, ID_766;
ID_768 = 46, ID_767;
ID_769 = 70, ID_768;
ID_770 = 45, ID_769;
ID_771 = 69, ID_770;
ID_772 = 44, ID_771;
ID_773 = 68, ID_772;
ID_774 = 43, ID_773;
ID_775 = 67, ID_774;
ID_776 = 42, ID_775;
ID_777 = 66, ID_776;
ID_778 = 41, ID_777;
ID_779 = 0, ID_778;
ID_780 = 54, ID_779;
ID_781 = 77, ID_780;
ID_782 = 54, ID_781;
ID_783 = 62, ID_782;
ID_784 = 54, ID_783;
ID_785 = 47, ID_784;
ID_786 = 54, ID_785;
ID_787 = 32, ID_786;
ID_788 = 54, ID_787;
ID_789 = 49, ID_788;
ID_790 = 59, ID_789;
ID_791 = 59, ID_790;
ID_792 = 40, ID_791;
ID_793 = 58, ID_792;
ID_794 = 39, ID_793;
ID_795 = 57, ID_794;
ID_796 = 38, ID_795;
ID_797 = 56, ID_796;
ID_798 = 37, ID_797;
ID_799 = 55, ID_798;
ID_800 = 36, ID_799;
ID_801 = 54, ID_800;
ID_802 = 35, ID_801;
ID_803 = 53, ID_802;
ID_804 = 34, ID_803;
ID_805 = 52, ID_804;
ID_806 = 33, ID_805;
ID_807 = 51, ID_806;
ID_808 = 32, ID_807;
ID_809 = 50, ID_808;
ID_810 = 31, ID_809;
ID_811 = 76, ID_810;
ID_812 = 53, ID_811;
ID_813 = 61, ID_812;
ID_814 = 53, ID_813;
ID_815 = 46, ID_814;
ID_816 = 53, ID_815;
ID_817 = 31, ID_816;
ID_818 = 53, ID_817;
ID_819 = 16, ID_818;
ID_820 = 53, ID_819;
ID_821 = 33, ID_820;
ID_822 = 58, ID_821;
ID_823 = 43, ID_822;
ID_824 = 30, ID_823;
ID_825 = 42, ID_824;
ID_826 = 29, ID_825;
ID_827 = 41, ID_826;
ID_828 = 28, ID_827;
ID_829 = 40, ID_828;
ID_830 = 27, ID_829;
ID_831 = 39, ID_830;
ID_832 = 26, ID_831;
ID_833 = 38, ID_832;
ID_834 = 25, ID_833;
ID_835 = 37, ID_834;
ID_836 = 24, ID_835;
ID_837 = 36, ID_836;
ID_838 = 23, ID_837;
ID_839 = 35, ID_838;
ID_840 = 22, ID_839;
ID_841 = 34, ID_840;
ID_842 = 21, ID_841;
ID_843 = 60, ID_842;
ID_844 = 52, ID_843;
ID_845 = 45, ID_844;
ID_846 = 52, ID_845;
ID_847 = 30, ID_846;
ID_848 = 52, ID_847;
ID_849 = 15, ID_848;
ID_850 = 52, ID_849;
ID_851 = 0, ID_850;
ID_852 = 52, ID_851;
ID_853 = 17, ID_852;
ID_854 = 57, ID_853;
ID_855 = 27, ID_854;
ID_856 = 20, ID_855;
ID_857 = 26, ID_856;
ID_858 = 19, ID_857;
ID_859 = 25, ID_858;
ID_860 = 18, ID_859;
ID_861 = 24, ID_860;
ID_862 = 17, ID_861;
ID_863 = 23, ID_862;
ID_864 = 16, ID_863;
ID_865 = 22, ID_864;
ID_866 = 15, ID_865;
ID_867 = 21, ID_866;
ID_868 = 14, ID_867;
ID_869 = 20, ID_868;
ID_870 = 13, ID_869;
ID_871 = 19, ID_870;
ID_872 = 12, ID_871;
ID_873 = 18, ID_872;
ID_874 = 11, ID_873;
ID_875 = 44, ID_874;
ID_876 = 51, ID_875;
ID_877 = 29, ID_876;
ID_878 = 51, ID_877;
ID_879 = 14, ID_878;
ID_880 = 51, ID_879;
ID_881 = 0, ID_880;
ID_882 = 51, ID_881;
ID_883 = 0, ID_882;
ID_884 = 51, ID_883;
ID_885 = 1, ID_884;
ID_886 = 56, ID_885;
ID_887 = 11, ID_886;
ID_888 = 10, ID_887;
ID_889 = 10, ID_888;
ID_890 = 9, ID_889;
ID_891 = 9, ID_890;
ID_892 = 8, ID_891;
ID_893 = 8, ID_892;
ID_894 = 7, ID_893;
ID_895 = 7, ID_894;
ID_896 = 6, ID_895;
ID_897 = 6, ID_896;
ID_898 = 5, ID_897;
ID_899 = 5, ID_898;
ID_900 = 4, ID_899;
ID_901 = 4, ID_900;
ID_902 = 3, ID_901;
ID_903 = 3, ID_902;
ID_904 = 2, ID_903;
ID_905 = 2, ID_904;
ID_906 = 1, ID_905;
ID_907 = route(60,80,ID_906);
ID_739 = _, ID_197;
ID_740 = _, ID_739;
ID_741 = _, ID_740;
ID_742 = _, ID_741;
ID_743 = _, ID_742;
ID_744 = _, ID_743;
ID_745 = _, ID_744;
ID_746 = _, ID_745;
ID_1235 = ID_1234, ID_746;
ID_1236 = ID_1235 : ID_907;
ID_909 = 16, 20;
ID_910 = 21, ID_909;
ID_911 = 11, ID_910;
ID_1557 = 12, 12;
ID_912 = 18, ID_911;
ID_913 = 15, ID_912;
ID_914 = 19, ID_913;
ID_915 = 10, ID_914;
ID_916 = 16, ID_915;
ID_917 = 14, ID_916;
ID_918 = 17, ID_917;
ID_919 = 9, ID_918;
ID_920 = 14, ID_919;
ID_921 = 13, ID_920;
ID_922 = 15, ID_921;
ID_923 = 8, ID_922;
ID_924 = 12, ID_923;
ID_925 = 12, ID_924;
ID_926 = 13, ID_925;
ID_927 = 7, ID_926;
ID_928 = 10, ID_927;
ID_929 = 16, ID_928;
ID_930 = 11, ID_929;
ID_931 = 6, ID_930;
ID_932 = 8, ID_931;
ID_933 = 15, ID_932;
ID_934 = 9, ID_933;
ID_935 = 5, ID_934;
ID_936 = 6, ID_935;
ID_937 = 14, ID_936;
ID_938 = 7, ID_937;
ID_939 = 4, ID_938;
ID_940 = 4, ID_939;
ID_941 = 13, ID_940;
ID_942 = 5, ID_941;
ID_943 = 3, ID_942;
ID_944 = 2, ID_943;
ID_945 = 12, ID_944;
ID_946 = 3, ID_945;
ID_947 = 2, ID_946;
ID_948 = 1, ID_947;
ID_949 = 1, ID_948;
ID_950 = route(16,21,ID_949);
ID_960 = (ID_959 : @);
ID_961 = ID_960, _;
ID_962 = (ID_961 : *);
ID_963 = ID_962, ID_962;
ID_964 = ID_962, ID_963;
ID_965 = ID_962, ID_964;
ID_966 = ID_962, ID_965;
ID_951 = _, 0;
ID_952 = (ID_951 : @);
ID_953 = ID_952, _;
ID_954 = (ID_953 : *);
ID_955 = ID_954, ID_954;
ID_956 = ID_954, ID_955;
ID_957 = ID_954, ID_956;
ID_958 = ID_954, ID_957;
ID_967 = ID_958, ID_966;
ID_968 = _, ID_967;
ID_969 = ID_950 : ID_968;
ID_970 = (ID_969 :> _);
ID_971 = ID_970, ID_970;
ID_972 = ID_970, ID_971;
ID_973 = ID_970, ID_972;
ID_974 = ID_970, ID_973;
ID_1237 = (ID_1236 : ID_974);
ID_976 = hslider("Tuning 1", 169.0f, 80.0f, 1000.0f, 0.10000000000000001f);
ID_977 = 2, ID_976;
ID_978 = (ID_977 : *);
ID_979 = ID_978, 0.65000000000000002f;
ID_980 = (ID_979 : *);
ID_981 = ID_980, 2;
ID_982 = (ID_981 : pow);
ID_983 = hslider("Density 1", 1200.0f, 80.0f, 5000.0f, 0.10000000000000001f);
ID_984 = ID_982, ID_983;
ID_985 = (ID_984 : *);
ID_987 = ID_986, 2;
ID_988 = (ID_987 : pow);
ID_989 = 3.1415926535897931f, ID_988;
ID_990 = (ID_989 : *);
ID_991 = ID_985, ID_990;
ID_992 = (ID_991 : *);
ID_993 = -2, ID_992;
ID_994 = (ID_993 : *);
ID_995 = ID_994, 0.011736111111111112f;
ID_996 = (ID_995 : *);
ID_997 = ID_986, 4;
ID_998 = (ID_997 : pow);
ID_999 = 3.1415926535897931f, ID_998;
ID_1000 = (ID_999 : *);
ID_1001 = ID_1000, 4;
ID_1002 = (ID_1001 : /);
ID_1003 = 2000000000.0f, ID_1002;
ID_1004 = (ID_1003 : *);
ID_1005 = 6, ID_1004;
ID_1006 = (ID_1005 : *);
ID_1007 = ID_996, ID_1006;
ID_1008 = (ID_1007 : -);
ID_1009 = ID_983, ID_990;
ID_1010 = (ID_1009 : *);
ID_1011 = 2, ID_1010;
ID_1012 = (ID_1011 : *);
ID_1013 = hslider("Damping 1", 1.3799999999999999f, 9.9999999999999995e-07f, 100.0f, 0.0001f);
ID_1014 = ID_1012, ID_1013;
ID_1015 = (ID_1014 : *);
ID_1016 = ID_1015, 0.00013773630401234569f;
ID_1017 = (ID_1016 : *);
ID_1018 = ID_1017, ID_649;
ID_1019 = (ID_1018 : /);
ID_1020 = ID_1008, ID_1019;
ID_1021 = (ID_1020 : -);
ID_1022 = 4, ID_1010;
ID_1023 = (ID_1022 : *);
ID_1024 = ID_1023, 0.00012999999999999999f;
ID_1025 = (ID_1024 : *);
ID_1026 = ID_1025, 0.011736111111111112f;
ID_1027 = (ID_1026 : *);
ID_1028 = ID_1027, ID_649;
ID_1029 = (ID_1028 : /);
ID_1030 = ID_1021, ID_1029;
ID_1031 = (ID_1030 : -);
ID_1032 = ID_1012, 0.00013773630401234569f;
ID_1033 = (ID_1032 : *);
ID_1034 = ID_1033, ID_667;
ID_1035 = (ID_1034 : /);
ID_1036 = ID_1031, ID_1035;
ID_1037 = (ID_1036 : +);
ID_1038 = ID_1037, ID_1004;
ID_1039 = (ID_1038 : +);
ID_1040 = ID_1039, 0.00013773630401234569f;
ID_1041 = (ID_1040 : /);
ID_1042 = ID_992, 0.011736111111111112f;
ID_1043 = (ID_1042 : *);
ID_1044 = 4, ID_1004;
ID_1045 = (ID_1044 : *);
ID_1046 = ID_1043, ID_1045;
ID_1047 = (ID_1046 : +);
ID_1048 = ID_1012, 0.00012999999999999999f;
ID_1049 = (ID_1048 : *);
ID_1050 = ID_1049, 0.011736111111111112f;
ID_1051 = (ID_1050 : *);
ID_1052 = ID_1051, ID_649;
ID_1053 = (ID_1052 : /);
ID_1054 = ID_1047, ID_1053;
ID_1055 = (ID_1054 : +);
ID_1056 = ID_1055, 0.00013773630401234569f;
ID_1057 = (ID_1056 : /);
ID_1058 = 0, ID_1004;
ID_1059 = (ID_1058 : -);
ID_1060 = ID_1059, 0.00013773630401234569f;
ID_1061 = (ID_1060 : /);
ID_1062 = ID_1057, ID_1061;
ID_1063 = ID_1041, ID_1062;
ID_1064 = 0, ID_1063;
ID_1065 = 0, ID_1064;
ID_1066 = -2, ID_1010;
ID_1067 = (ID_1066 : *);
ID_1068 = ID_1067, 0.00012999999999999999f;
ID_1069 = (ID_1068 : *);
ID_1070 = ID_1069, 0.011736111111111112f;
ID_1071 = (ID_1070 : /);
ID_1072 = ID_1071, ID_649;
ID_1073 = (ID_1072 : /);
ID_1074 = ID_1015, ID_649;
ID_1075 = (ID_1074 : /);
ID_1076 = (ID_1026 : /);
ID_1077 = ID_1076, ID_649;
ID_1078 = (ID_1077 : /);
ID_1079 = ID_1075, ID_1078;
ID_1080 = (ID_1079 : +);
ID_1081 = ID_1010, ID_667;
ID_1082 = (ID_1081 : /);
ID_1083 = ID_1080, ID_1082;
ID_1084 = (ID_1083 : -);
ID_1085 = ID_1073, 0;
ID_1086 = ID_1084, ID_1085;
ID_1087 = ID_1073, ID_1086;
ID_1088 = 0, ID_1087;
ID_1089 = ID_1037, 0.00013773630401234569f;
ID_1090 = (ID_1089 : /);
ID_1091 = ID_1090, ID_1062;
ID_1092 = ID_1057, ID_1091;
ID_1093 = ID_1061, ID_1092;
ID_1094 = ID_1093, ID_1088;
ID_1095 = ID_1094, ID_1094;
ID_1096 = ID_1094, ID_1095;
ID_1097 = ID_1041, ID_731;
ID_1098 = ID_1057, ID_1097;
ID_1099 = ID_1061, ID_1098;
ID_1100 = ID_1099, ID_1088;
ID_1101 = ID_1096, ID_1100;
ID_1102 = ID_1088, ID_1101;
ID_1103 = ID_1065, ID_1102;
ID_1104 = ID_1103, ID_746;
ID_1105 = ID_1104 : ID_907;
ID_1106 = (ID_1105 : ID_974);
ID_1238 = ID_1106, ID_1237;
ID_601 = hslider("Tuning 0", 147.0f, 80.0f, 1000.0f, 0.10000000000000001f);
ID_602 = 2, ID_601;
ID_603 = (ID_602 : *);
ID_604 = ID_603, 0.65000000000000002f;
ID_605 = (ID_604 : *);
ID_606 = ID_605, 2;
ID_607 = (ID_606 : pow);
ID_608 = hslider("Density 0", 1200.0f, 80.0f, 5000.0f, 0.10000000000000001f);
ID_609 = ID_607, ID_608;
ID_610 = (ID_609 : *);
ID_612 = ID_611, 2;
ID_613 = (ID_612 : pow);
ID_614 = 3.1415926535897931f, ID_613;
ID_615 = (ID_614 : *);
ID_616 = ID_610, ID_615;
ID_617 = (ID_616 : *);
ID_618 = -2, ID_617;
ID_619 = (ID_618 : *);
ID_620 = ID_619, 0.011736111111111112f;
ID_621 = (ID_620 : *);
ID_622 = ID_611, 4;
ID_623 = (ID_622 : pow);
ID_624 = 3.1415926535897931f, ID_623;
ID_625 = (ID_624 : *);
ID_626 = ID_625, 4;
ID_627 = (ID_626 : /);
ID_628 = 2000000000.0f, ID_627;
ID_629 = (ID_628 : *);
ID_630 = 6, ID_629;
ID_631 = (ID_630 : *);
ID_632 = ID_621, ID_631;
ID_633 = (ID_632 : -);
ID_634 = ID_608, ID_615;
ID_635 = (ID_634 : *);
ID_636 = 2, ID_635;
ID_637 = (ID_636 : *);
ID_638 = hslider("Damping 0", 1.3799999999999999f, 9.9999999999999995e-07f, 100.0f, 0.0001f);
ID_639 = ID_637, ID_638;
ID_640 = (ID_639 : *);
ID_641 = ID_640, 0.00013773630401234569f;
ID_642 = (ID_641 : *);
ID_650 = ID_642, ID_649;
ID_651 = (ID_650 : /);
ID_652 = ID_633, ID_651;
ID_653 = (ID_652 : -);
ID_654 = 4, ID_635;
ID_655 = (ID_654 : *);
ID_656 = ID_655, 0.00012999999999999999f;
ID_657 = (ID_656 : *);
ID_658 = ID_657, 0.011736111111111112f;
ID_659 = (ID_658 : *);
ID_660 = ID_659, ID_649;
ID_661 = (ID_660 : /);
ID_662 = ID_653, ID_661;
ID_663 = (ID_662 : -);
ID_664 = ID_637, 0.00013773630401234569f;
ID_665 = (ID_664 : *);
ID_668 = ID_665, ID_667;
ID_669 = (ID_668 : /);
ID_670 = ID_663, ID_669;
ID_671 = (ID_670 : +);
ID_672 = ID_671, ID_629;
ID_673 = (ID_672 : +);
ID_674 = ID_673, 0.00013773630401234569f;
ID_675 = (ID_674 : /);
ID_676 = ID_617, 0.011736111111111112f;
ID_677 = (ID_676 : *);
ID_678 = 4, ID_629;
ID_679 = (ID_678 : *);
ID_680 = ID_677, ID_679;
ID_681 = (ID_680 : +);
ID_682 = ID_637, 0.00012999999999999999f;
ID_683 = (ID_682 : *);
ID_684 = ID_683, 0.011736111111111112f;
ID_685 = (ID_684 : *);
ID_686 = ID_685, ID_649;
ID_687 = (ID_686 : /);
ID_688 = ID_681, ID_687;
ID_689 = (ID_688 : +);
ID_690 = ID_689, 0.00013773630401234569f;
ID_691 = (ID_690 : /);
ID_692 = 0, ID_629;
ID_693 = (ID_692 : -);
ID_694 = ID_693, 0.00013773630401234569f;
ID_695 = (ID_694 : /);
ID_696 = ID_691, ID_695;
ID_697 = ID_675, ID_696;
ID_698 = 0, ID_697;
ID_699 = 0, ID_698;
ID_700 = -2, ID_635;
ID_701 = (ID_700 : *);
ID_702 = ID_701, 0.00012999999999999999f;
ID_703 = (ID_702 : *);
ID_704 = ID_703, 0.011736111111111112f;
ID_705 = (ID_704 : /);
ID_706 = ID_705, ID_649;
ID_707 = (ID_706 : /);
ID_708 = ID_640, ID_649;
ID_709 = (ID_708 : /);
ID_710 = (ID_658 : /);
ID_711 = ID_710, ID_649;
ID_712 = (ID_711 : /);
ID_713 = ID_709, ID_712;
ID_714 = (ID_713 : +);
ID_715 = ID_635, ID_667;
ID_716 = (ID_715 : /);
ID_717 = ID_714, ID_716;
ID_718 = (ID_717 : -);
ID_719 = ID_707, 0;
ID_720 = ID_718, ID_719;
ID_721 = ID_707, ID_720;
ID_722 = 0, ID_721;
ID_723 = ID_671, 0.00013773630401234569f;
ID_724 = (ID_723 : /);
ID_725 = ID_724, ID_696;
ID_726 = ID_691, ID_725;
ID_727 = ID_695, ID_726;
ID_728 = ID_727, ID_722;
ID_729 = ID_728, ID_728;
ID_730 = ID_728, ID_729;
ID_732 = ID_675, ID_731;
ID_733 = ID_691, ID_732;
ID_734 = ID_695, ID_733;
ID_735 = ID_734, ID_722;
ID_736 = ID_730, ID_735;
ID_737 = ID_722, ID_736;
ID_738 = ID_699, ID_737;
ID_747 = ID_738, ID_746;
ID_908 = ID_747 : ID_907;
ID_975 = (ID_908 : ID_974);
ID_1239 = ID_975, ID_1238;
ID_1240 = hslider("Tuning 3", 440.0f, 80.0f, 1000.0f, 0.10000000000000001f);
ID_1241 = 2, ID_1240;
ID_1242 = (ID_1241 : *);
ID_1243 = ID_1242, 0.16f;
ID_1244 = (ID_1243 : *);
ID_1245 = ID_1244, 2;
ID_1246 = (ID_1245 : pow);
ID_1247 = hslider("Density 3", 1500.0f, 80.0f, 5000.0f, 0.10000000000000001f);
ID_1248 = ID_1246, ID_1247;
ID_1249 = (ID_1248 : *);
ID_1250 = ID_1249, 2.0000000000000002e-05f;
ID_1251 = (ID_1250 : *);
ID_1252 = ID_1251, 0.00071111111111111125f;
ID_1253 = (ID_1252 : *);
ID_1254 = ID_1253, 1.3632f;
ID_1255 = (ID_1254 : +);
ID_1256 = ID_1247, 2.0000000000000002e-05f;
ID_1257 = (ID_1256 : *);
ID_1258 = 2, ID_1257;
ID_1259 = (ID_1258 : *);
ID_1260 = ID_1259, 0.0025899999999999999f;
ID_1261 = (ID_1260 : *);
ID_1262 = ID_1261, 0.00071111111111111125f;
ID_1263 = (ID_1262 : *);
ID_1264 = ID_1263, ID_649;
ID_1265 = (ID_1264 : /);
ID_1266 = ID_1255, ID_1265;
ID_1267 = (ID_1266 : +);
ID_1268 = ID_1267, 5.056790123456791e-07f;
ID_1269 = (ID_1268 : /);
ID_1270 = -2, ID_1251;
ID_1271 = (ID_1270 : *);
ID_1272 = ID_1271, 0.00071111111111111125f;
ID_1273 = (ID_1272 : *);
ID_1274 = ID_1273, 2.0448f;
ID_1275 = (ID_1274 : -);
ID_1276 = hslider("Damping 3", 1.343f, 9.9999999999999995e-07f, 100.0f, 0.0001f);
ID_1277 = ID_1259, ID_1276;
ID_1278 = (ID_1277 : *);
ID_1279 = ID_1278, 5.056790123456791e-07f;
ID_1280 = (ID_1279 : *);
ID_1281 = ID_1280, ID_649;
ID_1282 = (ID_1281 : /);
ID_1283 = ID_1275, ID_1282;
ID_1284 = (ID_1283 : -);
ID_1285 = 4, ID_1257;
ID_1286 = (ID_1285 : *);
ID_1287 = ID_1286, 0.0025899999999999999f;
ID_1288 = (ID_1287 : *);
ID_1289 = ID_1288, 0.00071111111111111125f;
ID_1290 = (ID_1289 : *);
ID_1291 = ID_1290, ID_649;
ID_1292 = (ID_1291 : /);
ID_1293 = ID_1284, ID_1292;
ID_1294 = (ID_1293 : -);
ID_1295 = ID_1259, 5.056790123456791e-07f;
ID_1296 = (ID_1295 : *);
ID_1297 = ID_1296, ID_667;
ID_1298 = (ID_1297 : /);
ID_1299 = ID_1294, ID_1298;
ID_1300 = (ID_1299 : +);
ID_1301 = ID_1300, 5.056790123456791e-07f;
ID_1302 = (ID_1301 : /);
ID_1303 = ID_1269, -673945.31249999988f;
ID_1304 = ID_1302, ID_1303;
ID_1305 = ID_1269, ID_1304;
ID_1306 = -673945.31249999988f, ID_1305;
ID_1307 = -2, ID_1257;
ID_1308 = (ID_1307 : *);
ID_1309 = ID_1308, 0.0025899999999999999f;
ID_1310 = (ID_1309 : *);
ID_1311 = ID_1310, 0.00071111111111111125f;
ID_1312 = (ID_1311 : /);
ID_1313 = ID_1312, ID_649;
ID_1314 = (ID_1313 : /);
ID_1315 = ID_1278, ID_649;
ID_1316 = (ID_1315 : /);
ID_1317 = (ID_1289 : /);
ID_1318 = ID_1317, ID_649;
ID_1319 = (ID_1318 : /);
ID_1320 = ID_1316, ID_1319;
ID_1321 = (ID_1320 : +);
ID_1322 = ID_1257, ID_667;
ID_1323 = (ID_1322 : /);
ID_1324 = ID_1321, ID_1323;
ID_1325 = (ID_1324 : -);
ID_1326 = ID_1314, 0;
ID_1327 = ID_1325, ID_1326;
ID_1328 = ID_1314, ID_1327;
ID_1329 = 0, ID_1328;
ID_1330 = ID_1306, ID_1329;
ID_1331 = ID_1330, ID_1330;
ID_1332 = ID_1330, ID_1331;
ID_1333 = ID_1330, ID_1332;
ID_1334 = ID_1330, ID_1333;
ID_1335 = ID_1334, ID_746;
ID_1336 = ID_1335 : ID_907;
ID_1337 = (ID_1336 : ID_974);
ID_1338 = ID_1239, ID_1337;
ID_1413 = (0.92307692307692313f : floor);
ID_1448 = (4.4999999999999991f : floor);
ID_1436 = (3.0f : floor);
ID_1424 = (1.5f : floor);
ID_1339 = 20, 32;
ID_1340 = 31, ID_1339;
ID_1341 = 19, ID_1340;
ID_1342 = 30, ID_1341;
ID_1343 = 11, ID_1342;
ID_1344 = 29, ID_1343;
ID_1345 = 10, ID_1344;
ID_1346 = 28, ID_1345;
ID_1347 = 19, ID_1346;
ID_1348 = 27, ID_1347;
ID_1349 = 18, ID_1348;
ID_1350 = 26, ID_1349;
ID_1351 = 6, ID_1350;
ID_1352 = 25, ID_1351;
ID_1353 = 5, ID_1352;
ID_1354 = 24, ID_1353;
ID_1355 = 17, ID_1354;
ID_1356 = 23, ID_1355;
ID_1357 = 16, ID_1356;
ID_1358 = 22, ID_1357;
ID_1359 = 1, ID_1358;
ID_1360 = 21, ID_1359;
ID_1361 = 0, ID_1360;
ID_1362 = 20, ID_1361;
ID_1363 = 20, ID_1362;
ID_1364 = 19, ID_1363;
ID_1365 = 19, ID_1364;
ID_1366 = 18, ID_1365;
ID_1367 = 18, ID_1366;
ID_1368 = 17, ID_1367;
ID_1369 = 17, ID_1368;
ID_1370 = 16, ID_1369;
ID_1371 = 16, ID_1370;
ID_1372 = 15, ID_1371;
ID_1373 = 15, ID_1372;
ID_1374 = 14, ID_1373;
ID_1375 = 14, ID_1374;
ID_1376 = 13, ID_1375;
ID_1377 = 13, ID_1376;
ID_1378 = 12, ID_1377;
ID_1379 = 12, ID_1378;
ID_1380 = 11, ID_1379;
ID_1381 = 11, ID_1380;
ID_1382 = 10, ID_1381;
ID_1383 = 10, ID_1382;
ID_1384 = 9, ID_1383;
ID_1385 = 9, ID_1384;
ID_1386 = 8, ID_1385;
ID_1387 = 8, ID_1386;
ID_1388 = 7, ID_1387;
ID_1389 = 7, ID_1388;
ID_1390 = 6, ID_1389;
ID_1391 = 6, ID_1390;
ID_1392 = 5, ID_1391;
ID_1393 = 5, ID_1392;
ID_1394 = 4, ID_1393;
ID_1395 = 4, ID_1394;
ID_1396 = 3, ID_1395;
ID_1397 = 3, ID_1396;
ID_1398 = 2, ID_1397;
ID_1399 = 2, ID_1398;
ID_1400 = 1, ID_1399;
ID_1401 = 1, ID_1400;
ID_1402 = route(20,32,ID_1401);
ID_1403 = _, ID_746;
ID_1404 = _, ID_1403;
ID_1405 = _, ID_1404;
ID_1406 = _, ID_1405;
ID_1407 = _, ID_1406;
ID_1408 = _, ID_1407;
ID_1409 = _, ID_1408;
ID_1410 = _, ID_1409;
ID_1411 = _, ID_1410;
ID_1412 = _, ID_1411;
ID_1414 = 0.92307692307692313f, ID_1413;
ID_1415 = (ID_1414 : -);
ID_1420 = _, ID_1415;
ID_1421 = (ID_1420 : *);
ID_1416 = 1, ID_1415;
ID_1417 = (ID_1416 : -);
ID_1418 = _, ID_1417;
ID_1419 = (ID_1418 : *);
ID_1422 = ID_1419, ID_1421;
ID_1423 = (ID_1422 : +);
ID_1449 = 4.4999999999999991f, ID_1448;
ID_1450 = (ID_1449 : -);
ID_1455 = _, ID_1450;
ID_1456 = (ID_1455 : *);
ID_1451 = 1, ID_1450;
ID_1452 = (ID_1451 : -);
ID_1453 = _, ID_1452;
ID_1454 = (ID_1453 : *);
ID_1457 = ID_1454, ID_1456;
ID_1458 = (ID_1457 : +);
ID_1459 = ID_1423, ID_1458;
ID_1437 = 3.0f, ID_1436;
ID_1438 = (ID_1437 : -);
ID_1443 = _, ID_1438;
ID_1444 = (ID_1443 : *);
ID_1439 = 1, ID_1438;
ID_1440 = (ID_1439 : -);
ID_1441 = _, ID_1440;
ID_1442 = (ID_1441 : *);
ID_1445 = ID_1442, ID_1444;
ID_1446 = (ID_1445 : +);
ID_1447 = ID_1423, ID_1446;
ID_1460 = ID_1447, ID_1459;
ID_1425 = 1.5f, ID_1424;
ID_1426 = (ID_1425 : -);
ID_1431 = _, ID_1426;
ID_1432 = (ID_1431 : *);
ID_1427 = 1, ID_1426;
ID_1428 = (ID_1427 : -);
ID_1429 = _, ID_1428;
ID_1430 = (ID_1429 : *);
ID_1433 = ID_1430, ID_1432;
ID_1434 = (ID_1433 : +);
ID_1435 = ID_1423, ID_1434;
ID_1461 = ID_1435, ID_1460;
ID_1462 = ID_1412, ID_1461;
ID_1463 = _, ID_1412;
ID_1464 = _, ID_1463;
ID_1465 = _, ID_1464;
ID_1466 = _, ID_1465;
ID_1467 = _, ID_1466;
ID_1468 = _, ID_1467;
ID_1469 = ID_1417, 2;
ID_1470 = (ID_1469 : pow);
ID_1471 = ID_1415, 2;
ID_1472 = (ID_1471 : pow);
ID_1473 = ID_1470, ID_1472;
ID_1474 = (ID_1473 : +);
ID_1475 = ID_1474, 0.011736111111111112f;
ID_1476 = (ID_1475 : /);
ID_1477 = 0.10833333333333334f, ID_1476;
ID_1478 = (ID_1477 : *);
ID_1529 = ID_1478, ID_1213;
ID_1530 = (ID_1529 : /);
ID_1531 = ID_1452, 2;
ID_1532 = (ID_1531 : pow);
ID_1533 = ID_1450, 2;
ID_1534 = (ID_1533 : pow);
ID_1535 = ID_1532, ID_1534;
ID_1536 = (ID_1535 : +);
ID_1537 = ID_1536, 0.00071111111111111125f;
ID_1538 = (ID_1537 : /);
ID_1539 = 0.026666666666666668f, ID_1538;
ID_1540 = (ID_1539 : *);
ID_1541 = ID_1540, ID_1323;
ID_1542 = (ID_1541 : /);
ID_1543 = ID_1530, ID_1542;
ID_1544 = (ID_1543 : +);
ID_1545 = -1, ID_1544;
ID_1546 = (ID_1545 : /);
ID_1547 = ID_1546, ID_1213;
ID_1548 = (ID_1547 : /);
ID_1549 = 1, ID_1544;
ID_1550 = (ID_1549 : /);
ID_1551 = ID_1550, ID_1323;
ID_1552 = (ID_1551 : /);
ID_1553 = ID_1548, ID_1552;
ID_1504 = ID_1478, ID_1082;
ID_1505 = (ID_1504 : /);
ID_1506 = ID_1440, 2;
ID_1507 = (ID_1506 : pow);
ID_1508 = ID_1438, 2;
ID_1509 = (ID_1508 : pow);
ID_1510 = ID_1507, ID_1509;
ID_1511 = (ID_1510 : +);
ID_1512 = ID_1511, 0.00071111111111111125f;
ID_1513 = (ID_1512 : /);
ID_1514 = 0.026666666666666668f, ID_1513;
ID_1515 = (ID_1514 : *);
ID_1516 = ID_1515, ID_1323;
ID_1517 = (ID_1516 : /);
ID_1518 = ID_1505, ID_1517;
ID_1519 = (ID_1518 : +);
ID_1520 = -1, ID_1519;
ID_1521 = (ID_1520 : /);
ID_1522 = ID_1521, ID_1082;
ID_1523 = (ID_1522 : /);
ID_1524 = 1, ID_1519;
ID_1525 = (ID_1524 : /);
ID_1526 = ID_1525, ID_1323;
ID_1527 = (ID_1526 : /);
ID_1528 = ID_1523, ID_1527;
ID_1554 = ID_1528, ID_1553;
ID_1479 = ID_1478, ID_716;
ID_1480 = (ID_1479 : /);
ID_1481 = ID_1428, 2;
ID_1482 = (ID_1481 : pow);
ID_1483 = ID_1426, 2;
ID_1484 = (ID_1483 : pow);
ID_1485 = ID_1482, ID_1484;
ID_1486 = (ID_1485 : +);
ID_1487 = ID_1486, 0.00071111111111111125f;
ID_1488 = (ID_1487 : /);
ID_1489 = 0.026666666666666668f, ID_1488;
ID_1490 = (ID_1489 : *);
ID_1491 = ID_1490, ID_1323;
ID_1492 = (ID_1491 : /);
ID_1493 = ID_1480, ID_1492;
ID_1494 = (ID_1493 : +);
ID_1495 = -1, ID_1494;
ID_1496 = (ID_1495 : /);
ID_1497 = ID_1496, ID_716;
ID_1498 = (ID_1497 : /);
ID_1499 = 1, ID_1494;
ID_1500 = (ID_1499 : /);
ID_1501 = ID_1500, ID_1323;
ID_1502 = (ID_1501 : /);
ID_1503 = ID_1498, ID_1502;
ID_1555 = ID_1503, ID_1554;
ID_1556 = ID_1468, ID_1555;
ID_1558 = 10, ID_1557;
ID_1559 = 11, ID_1558;
ID_1560 = 8, ID_1559;
ID_1561 = 10, ID_1560;
ID_1562 = 6, ID_1561;
ID_1563 = 9, ID_1562;
ID_1564 = 4, ID_1563;
ID_1565 = 8, ID_1564;
ID_1566 = 2, ID_1565;
ID_1567 = 7, ID_1566;
ID_1568 = 11, ID_1567;
ID_1569 = 6, ID_1568;
ID_1570 = 9, ID_1569;
ID_1571 = 5, ID_1570;
ID_1572 = 7, ID_1571;
ID_1573 = 4, ID_1572;
ID_1574 = 5, ID_1573;
ID_1575 = 3, ID_1574;
ID_1576 = 3, ID_1575;
ID_1577 = 2, ID_1576;
ID_1578 = 1, ID_1577;
ID_1579 = 1, ID_1578;
ID_1580 = route(12,12,ID_1579);
ID_1581 = *, *;
ID_1582 = *, ID_1581;
ID_1583 = *, ID_1582;
ID_1584 = *, ID_1583;
ID_1585 = *, ID_1584;
ID_1586 = +, +;
ID_1587 = +, ID_1586;
ID_1588 = ID_1585 : ID_1587;
ID_1589 = ID_1580 : ID_1588;
ID_1590 = 8, ID_1557;
ID_1591 = 11, ID_1590;
ID_1592 = 4, ID_1591;
ID_1593 = 10, ID_1592;
ID_1594 = 11, ID_1593;
ID_1595 = 9, ID_1594;
ID_1596 = 7, ID_1595;
ID_1597 = 8, ID_1596;
ID_1598 = 3, ID_1597;
ID_1599 = 7, ID_1598;
ID_1600 = 10, ID_1599;
ID_1601 = 6, ID_1600;
ID_1602 = 6, ID_1601;
ID_1603 = 5, ID_1602;
ID_1604 = 2, ID_1603;
ID_1605 = 4, ID_1604;
ID_1606 = 9, ID_1605;
ID_1607 = 3, ID_1606;
ID_1608 = 5, ID_1607;
ID_1609 = 2, ID_1608;
ID_1610 = 1, ID_1609;
ID_1611 = 1, ID_1610;
ID_1612 = route(12,12,ID_1611);
ID_1613 = ID_1417, 0.10833333333333334f;
ID_1614 = (ID_1613 : /);
ID_1615 = _, ID_1614;
ID_1616 = (ID_1615 : *);
ID_1617 = ID_1415, 0.10833333333333334f;
ID_1618 = (ID_1617 : /);
ID_1619 = _, ID_1618;
ID_1620 = (ID_1619 : *);
ID_1651 = ID_1450, 1;
ID_1652 = (ID_1651 : -);
ID_1653 = ID_1652, 0.026666666666666668f;
ID_1654 = (ID_1653 : /);
ID_1655 = _, ID_1654;
ID_1656 = (ID_1655 : *);
ID_1657 = ID_1450, -1;
ID_1658 = (ID_1657 : *);
ID_1659 = ID_1658, 0.026666666666666668f;
ID_1660 = (ID_1659 : /);
ID_1661 = _, ID_1660;
ID_1662 = (ID_1661 : *);
ID_1663 = ID_1656, ID_1662;
ID_1664 = ID_1620, ID_1663;
ID_1665 = ID_1616, ID_1664;
ID_1636 = ID_1438, 1;
ID_1637 = (ID_1636 : -);
ID_1638 = ID_1637, 0.026666666666666668f;
ID_1639 = (ID_1638 : /);
ID_1640 = _, ID_1639;
ID_1641 = (ID_1640 : *);
ID_1642 = ID_1438, -1;
ID_1643 = (ID_1642 : *);
ID_1644 = ID_1643, 0.026666666666666668f;
ID_1645 = (ID_1644 : /);
ID_1646 = _, ID_1645;
ID_1647 = (ID_1646 : *);
ID_1648 = ID_1641, ID_1647;
ID_1649 = ID_1620, ID_1648;
ID_1650 = ID_1616, ID_1649;
ID_1666 = ID_1650, ID_1665;
ID_1621 = ID_1426, 1;
ID_1622 = (ID_1621 : -);
ID_1623 = ID_1622, 0.026666666666666668f;
ID_1624 = (ID_1623 : /);
ID_1625 = _, ID_1624;
ID_1626 = (ID_1625 : *);
ID_1627 = ID_1426, -1;
ID_1628 = (ID_1627 : *);
ID_1629 = ID_1628, 0.026666666666666668f;
ID_1630 = (ID_1629 : /);
ID_1631 = _, ID_1630;
ID_1632 = (ID_1631 : *);
ID_1633 = ID_1626, ID_1632;
ID_1634 = ID_1620, ID_1633;
ID_1635 = ID_1616, ID_1634;
ID_1667 = ID_1635, ID_1666;
ID_1668 = ID_1612 : ID_1667;
ID_1669 = (ID_1589 <: ID_1668);
ID_1670 = ID_1412, ID_1669;
ID_1671 = ID_1556 : ID_1670;
ID_1672 = 32, 20;
ID_1673 = 19, ID_1672;
ID_1674 = 31, ID_1673;
ID_1675 = 11, ID_1674;
ID_1676 = 30, ID_1675;
ID_1677 = 10, ID_1676;
ID_1678 = 29, ID_1677;
ID_1679 = 19, ID_1678;
ID_1680 = 28, ID_1679;
ID_1681 = 18, ID_1680;
ID_1682 = 27, ID_1681;
ID_1683 = 6, ID_1682;
ID_1684 = 26, ID_1683;
ID_1685 = 5, ID_1684;
ID_1686 = 25, ID_1685;
ID_1687 = 17, ID_1686;
ID_1688 = 24, ID_1687;
ID_1689 = 16, ID_1688;
ID_1690 = 23, ID_1689;
ID_1691 = 1, ID_1690;
ID_1692 = 22, ID_1691;
ID_1693 = 0, ID_1692;
ID_1694 = 21, ID_1693;
ID_1695 = 20, ID_1694;
ID_1696 = 20, ID_1695;
ID_1697 = 19, ID_1696;
ID_1698 = 19, ID_1697;
ID_1699 = 18, ID_1698;
ID_1700 = 18, ID_1699;
ID_1701 = 17, ID_1700;
ID_1702 = 17, ID_1701;
ID_1703 = 16, ID_1702;
ID_1704 = 16, ID_1703;
ID_1705 = 15, ID_1704;
ID_1706 = 15, ID_1705;
ID_1707 = 14, ID_1706;
ID_1708 = 14, ID_1707;
ID_1709 = 13, ID_1708;
ID_1710 = 13, ID_1709;
ID_1711 = 12, ID_1710;
ID_1712 = 12, ID_1711;
ID_1713 = 11, ID_1712;
ID_1714 = 11, ID_1713;
ID_1715 = 10, ID_1714;
ID_1716 = 10, ID_1715;
ID_1717 = 9, ID_1716;
ID_1718 = 9, ID_1717;
ID_1719 = 8, ID_1718;
ID_1720 = 8, ID_1719;
ID_1721 = 7, ID_1720;
ID_1722 = 7, ID_1721;
ID_1723 = 6, ID_1722;
ID_1724 = 6, ID_1723;
ID_1725 = 5, ID_1724;
ID_1726 = 5, ID_1725;
ID_1727 = 4, ID_1726;
ID_1728 = 4, ID_1727;
ID_1729 = 3, ID_1728;
ID_1730 = 3, ID_1729;
ID_1731 = 2, ID_1730;
ID_1732 = 2, ID_1731;
ID_1733 = 1, ID_1732;
ID_1734 = 1, ID_1733;
ID_1735 = route(32,20,ID_1734);
ID_1736 = ID_1671 : ID_1735;
ID_1737 = ID_1462 : ID_1736;
ID_1738 = ID_1402 : ID_1737;
ID_1757 = _, ID_1323;
ID_1758 = (ID_1757 : /);
ID_1759 = ID_1758, ID_1758;
ID_1760 = ID_1758, ID_1759;
ID_1761 = ID_1758, ID_1760;
ID_1762 = ID_1758, ID_1761;
ID_1751 = _, ID_1213;
ID_1752 = (ID_1751 : /);
ID_1753 = ID_1752, ID_1752;
ID_1754 = ID_1752, ID_1753;
ID_1755 = ID_1752, ID_1754;
ID_1756 = ID_1752, ID_1755;
ID_1763 = ID_1756, ID_1762;
ID_1745 = _, ID_1082;
ID_1746 = (ID_1745 : /);
ID_1747 = ID_1746, ID_1746;
ID_1748 = ID_1746, ID_1747;
ID_1749 = ID_1746, ID_1748;
ID_1750 = ID_1746, ID_1749;
ID_1764 = ID_1750, ID_1763;
ID_1739 = _, ID_716;
ID_1740 = (ID_1739 : /);
ID_1741 = ID_1740, ID_1740;
ID_1742 = ID_1740, ID_1741;
ID_1743 = ID_1740, ID_1742;
ID_1744 = ID_1740, ID_1743;
ID_1765 = ID_1744, ID_1764;
ID_1766 = ID_1738 : ID_1765;
ID_1767 = ID_1338 : ID_1766;
ID_1768 = (ID_600 : ID_1767);
ID_1769 = ID_1768 ~ ID_1412;
ID_1993 = hslider("Output Point3", 2.0f, 0.0f, 4.0f, 0.01f);
ID_2003 = (ID_1993 : \(x7).(\(x8).(((1.0f,(1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x7 : *),((1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x8 : *) : +)~_));
ID_1994 = ID_1993 : \(x9).(\(x10).(((1.0f,(1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x9 : *),((1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x10 : *) : +)~_);
ID_1998 = ID_1994, 1;
ID_1999 = ID_1998 : +;
ID_2000 = (ID_1999 : int);
ID_2052 = 4, ID_2000;
ID_2053 = (ID_2052 : ==);
ID_2004 = (ID_2003 : floor);
ID_2005 = ID_2003, ID_2004;
ID_2006 = (ID_2005 : -);
ID_1995 = (ID_1994 : int);
ID_2050 = 4, ID_1995;
ID_2051 = (ID_2050 : ==);
ID_2007 = 0, ID_2006;
ID_2054 = ID_2053, ID_2007;
ID_2055 = (ID_2054 : select2);
ID_2010 = 1, ID_2006;
ID_2011 = (ID_2010 : -);
ID_2041 = 3, ID_2000;
ID_2042 = (ID_2041 : ==);
ID_2039 = 3, ID_1995;
ID_2040 = (ID_2039 : ==);
ID_2043 = ID_2042, ID_2007;
ID_2044 = (ID_2043 : select2);
ID_2030 = 2, ID_2000;
ID_2031 = (ID_2030 : ==);
ID_2028 = 2, ID_1995;
ID_2029 = (ID_2028 : ==);
ID_2032 = ID_2031, ID_2007;
ID_2033 = (ID_2032 : select2);
ID_2019 = 1, ID_2000;
ID_2020 = (ID_2019 : ==);
ID_2017 = 1, ID_1995;
ID_2018 = (ID_2017 : ==);
ID_2021 = ID_2020, ID_2007;
ID_2022 = (ID_2021 : select2);
ID_2001 = 0, ID_2000;
ID_2002 = (ID_2001 : ==);
ID_1996 = 0, ID_1995;
ID_1997 = (ID_1996 : ==);
ID_2008 = ID_2002, ID_2007;
ID_2009 = (ID_2008 : select2);
ID_1920 = hslider("Output Point2", 2.0f, 0.0f, 4.0f, 0.01f);
ID_1930 = (ID_1920 : \(x7).(\(x8).(((1.0f,(1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x7 : *),((1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x8 : *) : +)~_));
ID_1921 = ID_1920 : \(x9).(\(x10).(((1.0f,(1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x9 : *),((1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x10 : *) : +)~_);
ID_1925 = ID_1921, 1;
ID_1926 = ID_1925 : +;
ID_1927 = (ID_1926 : int);
ID_1979 = 4, ID_1927;
ID_1980 = (ID_1979 : ==);
ID_1931 = (ID_1930 : floor);
ID_1932 = ID_1930, ID_1931;
ID_1933 = (ID_1932 : -);
ID_1922 = (ID_1921 : int);
ID_1977 = 4, ID_1922;
ID_1978 = (ID_1977 : ==);
ID_1934 = 0, ID_1933;
ID_1981 = ID_1980, ID_1934;
ID_1982 = (ID_1981 : select2);
ID_1937 = 1, ID_1933;
ID_1938 = (ID_1937 : -);
ID_1968 = 3, ID_1927;
ID_1969 = (ID_1968 : ==);
ID_1966 = 3, ID_1922;
ID_1967 = (ID_1966 : ==);
ID_1970 = ID_1969, ID_1934;
ID_1971 = (ID_1970 : select2);
ID_1957 = 2, ID_1927;
ID_1958 = (ID_1957 : ==);
ID_1955 = 2, ID_1922;
ID_1956 = (ID_1955 : ==);
ID_1959 = ID_1958, ID_1934;
ID_1960 = (ID_1959 : select2);
ID_1946 = 1, ID_1927;
ID_1947 = (ID_1946 : ==);
ID_1944 = 1, ID_1922;
ID_1945 = (ID_1944 : ==);
ID_1948 = ID_1947, ID_1934;
ID_1949 = (ID_1948 : select2);
ID_1928 = 0, ID_1927;
ID_1929 = (ID_1928 : ==);
ID_1923 = 0, ID_1922;
ID_1924 = (ID_1923 : ==);
ID_1935 = ID_1929, ID_1934;
ID_1936 = (ID_1935 : select2);
ID_1847 = hslider("Output Point1", 2.0f, 0.0f, 4.0f, 0.01f);
ID_1857 = (ID_1847 : \(x7).(\(x8).(((1.0f,(1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x7 : *),((1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x8 : *) : +)~_));
ID_1848 = ID_1847 : \(x9).(\(x10).(((1.0f,(1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x9 : *),((1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x10 : *) : +)~_);
ID_1852 = ID_1848, 1;
ID_1853 = ID_1852 : +;
ID_1854 = (ID_1853 : int);
ID_1906 = 4, ID_1854;
ID_1907 = (ID_1906 : ==);
ID_1858 = (ID_1857 : floor);
ID_1859 = ID_1857, ID_1858;
ID_1860 = (ID_1859 : -);
ID_1849 = (ID_1848 : int);
ID_1904 = 4, ID_1849;
ID_1905 = (ID_1904 : ==);
ID_1861 = 0, ID_1860;
ID_1908 = ID_1907, ID_1861;
ID_1909 = (ID_1908 : select2);
ID_1864 = 1, ID_1860;
ID_1865 = (ID_1864 : -);
ID_1895 = 3, ID_1854;
ID_1896 = (ID_1895 : ==);
ID_1893 = 3, ID_1849;
ID_1894 = (ID_1893 : ==);
ID_1897 = ID_1896, ID_1861;
ID_1898 = (ID_1897 : select2);
ID_1884 = 2, ID_1854;
ID_1885 = (ID_1884 : ==);
ID_1882 = 2, ID_1849;
ID_1883 = (ID_1882 : ==);
ID_1886 = ID_1885, ID_1861;
ID_1887 = (ID_1886 : select2);
ID_1873 = 1, ID_1854;
ID_1874 = (ID_1873 : ==);
ID_1871 = 1, ID_1849;
ID_1872 = (ID_1871 : ==);
ID_1875 = ID_1874, ID_1861;
ID_1876 = (ID_1875 : select2);
ID_1855 = 0, ID_1854;
ID_1856 = (ID_1855 : ==);
ID_1850 = 0, ID_1849;
ID_1851 = (ID_1850 : ==);
ID_1862 = ID_1856, ID_1861;
ID_1863 = (ID_1862 : select2);
ID_1774 = hslider("Output Point0", 2.0f, 0.0f, 4.0f, 0.01f);
ID_1784 = (ID_1774 : \(x7).(\(x8).(((1.0f,(1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x7 : *),((1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x8 : *) : +)~_));
ID_1775 = ID_1774 : \(x9).(\(x10).(((1.0f,(1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -) : -),x9 : *),((1,(44.100000000000001f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : -),x10 : *) : +)~_);
ID_1779 = ID_1775, 1;
ID_1780 = ID_1779 : +;
ID_1781 = (ID_1780 : int);
ID_1833 = 4, ID_1781;
ID_1834 = (ID_1833 : ==);
ID_1785 = (ID_1784 : floor);
ID_1786 = ID_1784, ID_1785;
ID_1787 = (ID_1786 : -);
ID_1776 = (ID_1775 : int);
ID_1831 = 4, ID_1776;
ID_1832 = (ID_1831 : ==);
ID_1788 = 0, ID_1787;
ID_1835 = ID_1834, ID_1788;
ID_1836 = (ID_1835 : select2);
ID_1791 = 1, ID_1787;
ID_1792 = (ID_1791 : -);
ID_1822 = 3, ID_1781;
ID_1823 = (ID_1822 : ==);
ID_1820 = 3, ID_1776;
ID_1821 = (ID_1820 : ==);
ID_1824 = ID_1823, ID_1788;
ID_1825 = (ID_1824 : select2);
ID_1811 = 2, ID_1781;
ID_1812 = (ID_1811 : ==);
ID_1809 = 2, ID_1776;
ID_1810 = (ID_1809 : ==);
ID_1813 = ID_1812, ID_1788;
ID_1814 = (ID_1813 : select2);
ID_1800 = 1, ID_1781;
ID_1801 = (ID_1800 : ==);
ID_1798 = 1, ID_1776;
ID_1799 = (ID_1798 : ==);
ID_1802 = ID_1801, ID_1788;
ID_1803 = (ID_1802 : select2);
ID_1782 = 0, ID_1781;
ID_1783 = (ID_1782 : ==);
ID_1777 = 0, ID_1776;
ID_1778 = (ID_1777 : ==);
ID_1789 = ID_1783, ID_1788;
ID_1790 = (ID_1789 : select2);
ID_187 = \(x11).(((1.4099999999999999f,hslider("Bow Friction0", 0.10000000000000001f, 0.001f, 1000.0f, 0.001f) : *),((hslider("Bow velocity0", 0.0f, -10.0f, 10.0f, 0.01f),0 : ==),(((x11,(x11 : mem) : -),(1.0f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : /),hslider("Bow velocity0", 0.0f, -10.0f, 10.0f, 0.01f) : -),0 : select2) : *),((((0,hslider("Bow Friction0", 0.10000000000000001f, 0.001f, 1000.0f, 0.001f) : -),((hslider("Bow velocity0", 0.0f, -10.0f, 10.0f, 0.01f),0 : ==),(((x11,(x11 : mem) : -),(1.0f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : /),hslider("Bow velocity0", 0.0f, -10.0f, 10.0f, 0.01f) : -),0 : select2) : *),((hslider("Bow velocity0", 0.0f, -10.0f, 10.0f, 0.01f),0 : ==),(((x11,(x11 : mem) : -),(1.0f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : /),hslider("Bow velocity0", 0.0f, -10.0f, 10.0f, 0.01f) : -),0 : select2) : *),0.5f : + : exp) : *), ID_186;
ID_188 = ID_187 : *;
ID_189 = (_ : ID_188);
ID_190 = \(x12).(((1,button("Play0") : -),0 : >),(221,(x12,1 : +) : min),0 : select2) ~ _;
ID_191 = (ID_190 : \(x13).((x13,220 : <=),0,((hslider("Plucking Force", 1.0f, 0.10000000000000001f, 100.0f, 0.10000000000000001f),2 : /),(1,((3.1415926535897931f,x13 : *),220 : / : cos) : -) : *) : select2));
ID_192 = ID_191, 0.10833333333333334f;
ID_193 = (ID_192 : /);
ID_194 = ID_189, ID_193;
ID_201 = ID_194 :> ID_200;
ID_271 = (ID_201 <: ID_270);
ID_275 = \(x14).(((1.4099999999999999f,hslider("Bow Friction1", 0.10000000000000001f, 0.001f, 1000.0f, 0.001f) : *),((hslider("Bow velocity1", 0.0f, -10.0f, 10.0f, 0.01f),0 : ==),(((x14,(x14 : mem) : -),(1.0f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : /),hslider("Bow velocity1", 0.0f, -10.0f, 10.0f, 0.01f) : -),0 : select2) : *),((((0,hslider("Bow Friction1", 0.10000000000000001f, 0.001f, 1000.0f, 0.001f) : -),((hslider("Bow velocity1", 0.0f, -10.0f, 10.0f, 0.01f),0 : ==),(((x14,(x14 : mem) : -),(1.0f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : /),hslider("Bow velocity1", 0.0f, -10.0f, 10.0f, 0.01f) : -),0 : select2) : *),((hslider("Bow velocity1", 0.0f, -10.0f, 10.0f, 0.01f),0 : ==),(((x14,(x14 : mem) : -),(1.0f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : /),hslider("Bow velocity1", 0.0f, -10.0f, 10.0f, 0.01f) : -),0 : select2) : *),0.5f : + : exp) : *), ID_274;
ID_276 = ID_275 : *;
ID_277 = (_ : ID_276);
ID_278 = \(x15).(((1,button("Play1") : -),0 : >),(221,(x15,1 : +) : min),0 : select2) ~ _;
ID_279 = (ID_278 : \(x13).((x13,220 : <=),0,((hslider("Plucking Force", 1.0f, 0.10000000000000001f, 100.0f, 0.10000000000000001f),2 : /),(1,((3.1415926535897931f,x13 : *),220 : / : cos) : -) : *) : select2));
ID_280 = ID_279, 0.10833333333333334f;
ID_281 = (ID_280 : /);
ID_282 = ID_277, ID_281;
ID_283 = ID_282 :> ID_200;
ID_353 = (ID_283 <: ID_352);
ID_357 = \(x16).(((1.4099999999999999f,hslider("Bow Friction2", 0.10000000000000001f, 0.001f, 1000.0f, 0.001f) : *),((hslider("Bow velocity2", 0.0f, -10.0f, 10.0f, 0.01f),0 : ==),(((x16,(x16 : mem) : -),(1.0f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : /),hslider("Bow velocity2", 0.0f, -10.0f, 10.0f, 0.01f) : -),0 : select2) : *),((((0,hslider("Bow Friction2", 0.10000000000000001f, 0.001f, 1000.0f, 0.001f) : -),((hslider("Bow velocity2", 0.0f, -10.0f, 10.0f, 0.01f),0 : ==),(((x16,(x16 : mem) : -),(1.0f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : /),hslider("Bow velocity2", 0.0f, -10.0f, 10.0f, 0.01f) : -),0 : select2) : *),((hslider("Bow velocity2", 0.0f, -10.0f, 10.0f, 0.01f),0 : ==),(((x16,(x16 : mem) : -),(1.0f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : /),hslider("Bow velocity2", 0.0f, -10.0f, 10.0f, 0.01f) : -),0 : select2) : *),0.5f : + : exp) : *), ID_356;
ID_358 = ID_357 : *;
ID_359 = (_ : ID_358);
ID_360 = \(x17).(((1,button("Play2") : -),0 : >),(221,(x17,1 : +) : min),0 : select2) ~ _;
ID_361 = (ID_360 : \(x13).((x13,220 : <=),0,((hslider("Plucking Force", 1.0f, 0.10000000000000001f, 100.0f, 0.10000000000000001f),2 : /),(1,((3.1415926535897931f,x13 : *),220 : / : cos) : -) : *) : select2));
ID_362 = ID_361, 0.10833333333333334f;
ID_363 = (ID_362 : /);
ID_364 = ID_359, ID_363;
ID_365 = ID_364 :> ID_200;
ID_435 = (ID_365 <: ID_434);
ID_439 = \(x18).(((1.4099999999999999f,hslider("Bow Friction3", 0.10000000000000001f, 0.001f, 1000.0f, 0.001f) : *),((hslider("Bow velocity3", 0.0f, -10.0f, 10.0f, 0.01f),0 : ==),(((x18,(x18 : mem) : -),(1.0f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : /),hslider("Bow velocity3", 0.0f, -10.0f, 10.0f, 0.01f) : -),0 : select2) : *),((((0,hslider("Bow Friction3", 0.10000000000000001f, 0.001f, 1000.0f, 0.001f) : -),((hslider("Bow velocity3", 0.0f, -10.0f, 10.0f, 0.01f),0 : ==),(((x18,(x18 : mem) : -),(1.0f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : /),hslider("Bow velocity3", 0.0f, -10.0f, 10.0f, 0.01f) : -),0 : select2) : *),((hslider("Bow velocity3", 0.0f, -10.0f, 10.0f, 0.01f),0 : ==),(((x18,(x18 : mem) : -),(1.0f,(192000.0f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : /) : /),hslider("Bow velocity3", 0.0f, -10.0f, 10.0f, 0.01f) : -),0 : select2) : *),0.5f : + : exp) : *), ID_438;
ID_440 = ID_439 : *;
ID_441 = (_ : ID_440);
ID_442 = \(x19).(((1,button("Play3") : -),0 : >),(221,(x19,1 : +) : min),0 : select2) ~ _;
ID_443 = (ID_442 : \(x13).((x13,220 : <=),0,((hslider("Plucking Force", 1.0f, 0.10000000000000001f, 100.0f, 0.10000000000000001f),2 : /),(1,((3.1415926535897931f,x13 : *),220 : / : cos) : -) : *) : select2));
ID_444 = ID_443, 0.026666666666666668f;
ID_445 = (ID_444 : /);
ID_446 = ID_441, ID_445;
ID_447 = ID_446 :> ID_200;
ID_517 = (ID_447 <: ID_516);
ID_518 = ID_435, ID_517;
ID_519 = ID_353, ID_518;
ID_520 = ID_271, ID_519;
ID_1770 = ID_520 : ID_1769;
ID_1771 = ID_183 : ID_1770;
ID_1772 = (ID_143 :> ID_1771);
ID_1773 = ID_1772 ~ ID_1412;
ID_1793 = ID_1790, ID_1792;
ID_1794 = ID_1778, ID_1793;
ID_1795 = (ID_1794 : select2);
ID_1796 = _, ID_1795;
ID_1797 = (ID_1796 : *);
ID_1804 = ID_1803, ID_1792;
ID_1805 = ID_1799, ID_1804;
ID_1806 = (ID_1805 : select2);
ID_1807 = _, ID_1806;
ID_1808 = (ID_1807 : *);
ID_1815 = ID_1814, ID_1792;
ID_1816 = ID_1810, ID_1815;
ID_1817 = (ID_1816 : select2);
ID_1818 = _, ID_1817;
ID_1819 = (ID_1818 : *);
ID_1826 = ID_1825, ID_1792;
ID_1827 = ID_1821, ID_1826;
ID_1828 = (ID_1827 : select2);
ID_1829 = _, ID_1828;
ID_1830 = (ID_1829 : *);
ID_1837 = ID_1836, ID_1792;
ID_1838 = ID_1832, ID_1837;
ID_1839 = (ID_1838 : select2);
ID_1840 = _, ID_1839;
ID_1841 = (ID_1840 : *);
ID_1842 = ID_1830, ID_1841;
ID_1843 = ID_1819, ID_1842;
ID_1844 = ID_1808, ID_1843;
ID_1845 = ID_1797, ID_1844;
ID_1846 = (ID_1845 :> _);
ID_1866 = ID_1863, ID_1865;
ID_1867 = ID_1851, ID_1866;
ID_1868 = (ID_1867 : select2);
ID_1869 = _, ID_1868;
ID_1870 = (ID_1869 : *);
ID_1877 = ID_1876, ID_1865;
ID_1878 = ID_1872, ID_1877;
ID_1879 = (ID_1878 : select2);
ID_1880 = _, ID_1879;
ID_1881 = (ID_1880 : *);
ID_1888 = ID_1887, ID_1865;
ID_1889 = ID_1883, ID_1888;
ID_1890 = (ID_1889 : select2);
ID_1891 = _, ID_1890;
ID_1892 = (ID_1891 : *);
ID_1899 = ID_1898, ID_1865;
ID_1900 = ID_1894, ID_1899;
ID_1901 = (ID_1900 : select2);
ID_1902 = _, ID_1901;
ID_1903 = (ID_1902 : *);
ID_1910 = ID_1909, ID_1865;
ID_1911 = ID_1905, ID_1910;
ID_1912 = (ID_1911 : select2);
ID_1913 = _, ID_1912;
ID_1914 = (ID_1913 : *);
ID_1915 = ID_1903, ID_1914;
ID_1916 = ID_1892, ID_1915;
ID_1917 = ID_1881, ID_1916;
ID_1918 = ID_1870, ID_1917;
ID_1919 = (ID_1918 :> _);
ID_1939 = ID_1936, ID_1938;
ID_1940 = ID_1924, ID_1939;
ID_1941 = (ID_1940 : select2);
ID_1942 = _, ID_1941;
ID_1943 = (ID_1942 : *);
ID_1950 = ID_1949, ID_1938;
ID_1951 = ID_1945, ID_1950;
ID_1952 = (ID_1951 : select2);
ID_1953 = _, ID_1952;
ID_1954 = (ID_1953 : *);
ID_1961 = ID_1960, ID_1938;
ID_1962 = ID_1956, ID_1961;
ID_1963 = (ID_1962 : select2);
ID_1964 = _, ID_1963;
ID_1965 = (ID_1964 : *);
ID_1972 = ID_1971, ID_1938;
ID_1973 = ID_1967, ID_1972;
ID_1974 = (ID_1973 : select2);
ID_1975 = _, ID_1974;
ID_1976 = (ID_1975 : *);
ID_1983 = ID_1982, ID_1938;
ID_1984 = ID_1978, ID_1983;
ID_1985 = (ID_1984 : select2);
ID_1986 = _, ID_1985;
ID_1987 = (ID_1986 : *);
ID_1988 = ID_1976, ID_1987;
ID_1989 = ID_1965, ID_1988;
ID_1990 = ID_1954, ID_1989;
ID_1991 = ID_1943, ID_1990;
ID_1992 = (ID_1991 :> _);
ID_2012 = ID_2009, ID_2011;
ID_2013 = ID_1997, ID_2012;
ID_2014 = (ID_2013 : select2);
ID_2015 = _, ID_2014;
ID_2016 = (ID_2015 : *);
ID_2023 = ID_2022, ID_2011;
ID_2024 = ID_2018, ID_2023;
ID_2025 = (ID_2024 : select2);
ID_2026 = _, ID_2025;
ID_2027 = (ID_2026 : *);
ID_2034 = ID_2033, ID_2011;
ID_2035 = ID_2029, ID_2034;
ID_2036 = (ID_2035 : select2);
ID_2037 = _, ID_2036;
ID_2038 = (ID_2037 : *);
ID_2045 = ID_2044, ID_2011;
ID_2046 = ID_2040, ID_2045;
ID_2047 = (ID_2046 : select2);
ID_2048 = _, ID_2047;
ID_2049 = (ID_2048 : *);
ID_2056 = ID_2055, ID_2011;
ID_2057 = ID_2051, ID_2056;
ID_2058 = (ID_2057 : select2);
ID_2059 = _, ID_2058;
ID_2060 = (ID_2059 : *);
ID_2061 = ID_2049, ID_2060;
ID_2062 = ID_2038, ID_2061;
ID_2063 = ID_2027, ID_2062;
ID_2064 = ID_2016, ID_2063;
ID_2065 = (ID_2064 :> _);
ID_2066 = ID_1992, ID_2065;
ID_2067 = ID_1919, ID_2066;
ID_2068 = ID_1846, ID_2067;
ID_2069 = ID_1773 : ID_2068;
ID_2071 = ID_2069 :> ID_2070;
process = ID_2071;
